(()=>{var e={};e.id=370,e.ids=[370],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12909:(e,s,r)=>{"use strict";r.d(s,{M:()=>a,j:()=>i});var o=r(85888),t=r(99425),n=r(45655);let i=(0,o.li)({database:(0,t._)(n.db,{provider:"postgresql"}),emailAndPassword:{enabled:!0,requireEmailVerification:!1},socialProviders:{google:{clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,redirectURI:"http://localhost:3000/api/auth/callback/google"}},session:{expiresIn:604800,updateAge:86400},secret:process.env.BETTER_AUTH_SECRET,baseURL:process.env.BETTER_AUTH_URL||process.env.NEXTAUTH_URL||"http://localhost:3000",rateLimit:{window:6e4,max:10}});async function a(e){try{console.log("[getServerSession] Attempting to get server session...");let s=e.headers,r=await i.api.getSession({headers:s});return console.log("[getServerSession] Session:",r?"found":"not found"),r}catch(e){return console.error("[getServerSession] Error obtaining server session from better-auth:",e),null}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},45655:(e,s,r)=>{"use strict";r.d(s,{db:()=>t});let o=require("@prisma/client"),t=global.prisma||new o.PrismaClient({log:["query"]})},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},95529:(e,s,r)=>{"use strict";r.r(s),r.d(s,{patchFetch:()=>v,routeModule:()=>p,serverHooks:()=>E,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>g});var o={};r.r(o),r.d(o,{DELETE:()=>d,GET:()=>l});var t=r(96559),n=r(48088),i=r(37719),a=r(32190),u=r(12909);let c=process.env.DOCUSEAL_URL||"https://api.docuseal.com";async function l(e,{params:s}){await (0,u.M)(e)||console.warn("[api/docuseal/submissions/[id]] no session - proceeding as anonymous");try{let{id:e}=await s,r=await fetch(`${c}/submissions/${e}`,{headers:{"X-Auth-Token":process.env.DOCUSEAL_API_KEY??"","Content-Type":"application/json"}});if(!r.ok){let e=await r.json();return a.NextResponse.json(e,{status:r.status})}let o=await r.json();return a.NextResponse.json(o)}catch(r){let{id:e}=await s;return console.error(`Error fetching DocuSeal submission ${e}:`,r),a.NextResponse.json({message:"Internal Server Error",error:r.message??String(r)},{status:500})}}async function d(e,{params:s}){let r=(await s).id;console.log("[api/docuseal/submissions/[id]] DELETE request received for ID:",r);let o=await (0,u.M)(e);if(!o)return console.warn("[api/docuseal/submissions/[id]] Unauthorized: No session found."),a.NextResponse.json({message:"Unauthorized"},{status:401});console.log("[api/docuseal/submissions/[id]] Session found for user:",o.user?.email);try{let e=process.env.DOCUSEAL_API_KEY;if(!e)return console.error("[api/docuseal/submissions/[id]] DOCUSEAL_API_KEY is not set."),a.NextResponse.json({message:"Server configuration error: DocuSeal API key missing."},{status:500});console.log("[api/docuseal/submissions/[id]] Using DOCUSEAL_API_KEY:",e?"present":"missing");let s=await fetch(`${c}/submissions/${r}?permanently=true`,{method:"DELETE",headers:{"X-Auth-Token":e}});if(!s.ok){let e=await s.json();return console.error("[api/docuseal/submissions/[id]] DocuSeal DELETE error:",{status:s.status,body:e}),a.NextResponse.json(e,{status:s.status})}return console.log("[api/docuseal/submissions/[id]] DocuSeal DELETE success",{id:r}),a.NextResponse.json({message:"Submission deleted successfully"},{status:200})}catch(e){return console.error(`Error deleting DocuSeal submission ${r}:`,e),a.NextResponse.json({message:"Internal Server Error",error:e.message??String(e)},{status:500})}}let p=new t.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/docuseal/submissions/[id]/route",pathname:"/api/docuseal/submissions/[id]",filename:"route",bundlePath:"app/api/docuseal/submissions/[id]/route"},resolvedPagePath:"/home/maxwell/projects/projects/NextJs/Docu/src/app/api/docuseal/submissions/[id]/route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:m,workUnitAsyncStorage:g,serverHooks:E}=p;function v(){return(0,i.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:g})}},96487:()=>{}};var s=require("../../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),o=s.X(0,[719,986,190],()=>r(95529));module.exports=o})();