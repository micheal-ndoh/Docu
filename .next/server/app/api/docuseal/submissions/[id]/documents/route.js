(()=>{var e={};e.id=309,e.ids=[309],e.modules={2276:(e,s,t)=>{"use strict";t.r(s),t.d(s,{patchFetch:()=>v,routeModule:()=>d,serverHooks:()=>g,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>m});var r={};t.r(r),t.d(r,{GET:()=>p});var o=t(96559),n=t(48088),i=t(37719),a=t(32190),u=t(12909);let c=process.env.DOCUSEAL_URL||"https://api.docuseal.com";async function p(e,{params:s}){if(!await (0,u.M)(e))return a.NextResponse.json({message:"Unauthorized"},{status:401});try{let{id:e}=s,t=await fetch(`${c}/submissions/${e}/documents`,{headers:{"X-Auth-Token":process.env.DOCUSEAL_API_KEY??"","Content-Type":"application/json"}});if(!t.ok){let e=await t.json();return a.NextResponse.json(e,{status:t.status})}let r=await t.json();return a.NextResponse.json(r)}catch(e){return console.error(`Error fetching submission documents ${s.id}:`,e),a.NextResponse.json({message:"Internal Server Error",error:e.message??String(e)},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/docuseal/submissions/[id]/documents/route",pathname:"/api/docuseal/submissions/[id]/documents",filename:"route",bundlePath:"app/api/docuseal/submissions/[id]/documents/route"},resolvedPagePath:"/home/maxwell/projects/projects/NextJs/Docu/src/app/api/docuseal/submissions/[id]/documents/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:l,workUnitAsyncStorage:m,serverHooks:g}=d;function v(){return(0,i.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:m})}},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12909:(e,s,t)=>{"use strict";t.d(s,{M:()=>a,j:()=>i});var r=t(85888),o=t(99425),n=t(45655);let i=(0,r.li)({database:(0,o._)(n.db,{provider:"postgresql"}),emailAndPassword:{enabled:!0,requireEmailVerification:!1},socialProviders:{google:{clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,redirectURI:"http://localhost:3000/api/auth/callback/google"}},session:{expiresIn:604800,updateAge:86400},secret:process.env.BETTER_AUTH_SECRET,baseURL:process.env.BETTER_AUTH_URL||process.env.NEXTAUTH_URL||"http://localhost:3000",rateLimit:{window:6e4,max:10}});async function a(e){try{console.log("[getServerSession] Attempting to get server session...");let s=e.headers,t=await i.api.getSession({headers:s});return console.log("[getServerSession] Session:",t?"found":"not found"),t}catch(e){return console.error("[getServerSession] Error obtaining server session from better-auth:",e),null}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},45655:(e,s,t)=>{"use strict";t.d(s,{db:()=>o});let r=require("@prisma/client"),o=global.prisma||new r.PrismaClient({log:["query"]})},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96487:()=>{}};var s=require("../../../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[719,986,190],()=>t(2276));module.exports=r})();