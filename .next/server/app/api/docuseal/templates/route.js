(()=>{var e={};e.id=618,e.ids=[618],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12909:(e,t,s)=>{"use strict";s.d(t,{M:()=>i,j:()=>n});var r=s(85888),o=s(99425),a=s(45655);let n=(0,r.li)({database:(0,o._)(a.db,{provider:"postgresql"}),emailAndPassword:{enabled:!0,requireEmailVerification:!1},socialProviders:{google:{clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,redirectURI:"http://localhost:3000/api/auth/callback/google"}},session:{expiresIn:604800,updateAge:86400},secret:process.env.BETTER_AUTH_SECRET,baseURL:process.env.BETTER_AUTH_URL||process.env.NEXTAUTH_URL||"http://localhost:3000",rateLimit:{window:6e4,max:10}});async function i(e){try{console.log("[getServerSession] Attempting to get server session...");let t=e.headers,s=await n.api.getSession({headers:t});return console.log("[getServerSession] Session:",s?"found":"not found"),s}catch(e){return console.error("[getServerSession] Error obtaining server session from better-auth:",e),null}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},45655:(e,t,s)=>{"use strict";s.d(t,{db:()=>o});let r=require("@prisma/client"),o=global.prisma||new r.PrismaClient({log:["query"]})},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},90434:(e,t,s)=>{"use strict";s.r(t),s.d(t,{patchFetch:()=>S,routeModule:()=>g,serverHooks:()=>E,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>h});var r={};s.r(r),s.d(r,{GET:()=>d,POST:()=>m,runtime:()=>u});var o=s(96559),a=s(48088),n=s(37719),i=s(32190),l=s(12909),p=s(45655);let u="nodejs",c=process.env.DOCUSEAL_URL||"https://api.docuseal.com";async function d(e){let t=await (0,l.M)(e);if(console.log("[api/docuseal/templates] runtime-info",{NODE_ENV:"production",runtime:"undefined"!=typeof globalThis?globalThis.process?.release?.name??"unknown":"unknown",sessionFound:!!t}),!t)return i.NextResponse.json({message:"Unauthorized - please sign in to view templates"},{status:401});let s=t.user?.id;if(!s)return i.NextResponse.json({message:"User ID not found in session"},{status:400});console.log("[api/docuseal/templates] GET",{url:e.url,userId:s});try{let{searchParams:t}=new URL(e.url),r=new URLSearchParams;for(let e of["q","slug","external_id","folder","archived","limit","after","before"]){let s=t.get(e);s&&r.set(e,s)}r.has("limit")||r.set("limit","10");let o=`${c}/templates?${r.toString()}`;console.log("[api/docuseal/templates] forwarding GET to DocuSeal",{outgoingUrl:o,hasApiKey:!!process.env.DOCUSEAL_API_KEY,apiKeyLength:process.env.DOCUSEAL_API_KEY?.length??0});let a=await fetch(o,{headers:{"X-Auth-Token":process.env.DOCUSEAL_API_KEY??""}});if(!a.ok){let e=await a.text(),t=e;try{t=JSON.parse(e)}catch{}return console.error("[api/docuseal/templates] DocuSeal GET error",{status:a.status,body:t}),i.NextResponse.json(t,{status:a.status})}let n=await a.json(),l=(await p.db.template.findMany({where:{userId:s}})).map(e=>e.docusealId),u=Array.isArray(n)?n:n.data||[];if(u=u.filter(e=>l.includes(e.id)),console.log(`[api/docuseal/templates] Filtered ${u.length} templates for user ${s}`),Array.isArray(n))return i.NextResponse.json({data:u});return i.NextResponse.json({...n,data:u})}catch(t){let e=t instanceof Error?t.message:String(t);return console.error("Error fetching DocuSeal templates:",e),i.NextResponse.json({message:"Internal Server Error",error:e},{status:500})}}async function m(e){let t=await (0,l.M)(e);if(console.log("[api/docuseal/templates] runtime-info",{NODE_ENV:"production",runtime:"undefined"!=typeof globalThis?globalThis.process?.release?.name??"unknown":"unknown",sessionFound:!!t}),!t)return i.NextResponse.json({message:"Unauthorized"},{status:401});console.log("[api/docuseal/templates] POST received",{url:e.url,contentType:e.headers.get("content-type")});try{let s=await e.formData(),r=[];for(let e of s.keys())r.push(e);console.log("[api/docuseal/templates] formData keys:",r);let o=s.get("file"),a=s.get("name")||s.get("template_name")||"Untitled Template";if(!o)return console.error("[api/docuseal/templates] no file provided in formData"),i.NextResponse.json({message:"File is required"},{status:400});let n=await o.arrayBuffer(),l=Buffer.from(n).toString("base64"),u=o.type||"",d=o.name||"document",m="application/pdf"===u||d.toLowerCase().endsWith(".pdf"),g="application/vnd.openxmlformats-officedocument.wordprocessingml.document"===u||d.toLowerCase().endsWith(".docx"),f="/templates/pdf";g&&(f="/templates/docx"),m||g||console.warn("[api/docuseal/templates] unknown file mime, defaulting to PDF endpoint",{mime:u,fileName:d});let h=`${c}${f}`;console.log("[api/docuseal/templates] forwarding POST to DocuSeal (json)",{outgoingUrl:h,targetPath:f,hasApiKey:!!process.env.DOCUSEAL_API_KEY});let E=await fetch(h,{method:"POST",headers:{"X-Auth-Token":process.env.DOCUSEAL_API_KEY??"","Content-Type":"application/json"},body:JSON.stringify({name:a,documents:[{name:d,file:l}]})});if(!E.ok){let e=await E.text(),t=e;try{t=JSON.parse(e)}catch{}return console.error("[api/docuseal/templates] DocuSeal POST error",{status:E.status,body:t}),i.NextResponse.json(t,{status:E.status})}let S=await E.json();try{let e=t.user?.id;e&&S.id&&(await p.db.template.create({data:{userId:e,docusealId:S.id,name:S.name||a}}),console.log(`[api/docuseal/templates] Saved template ${S.id} to database for user ${e}`))}catch(e){console.error("[api/docuseal/templates] Error saving template to database:",e)}return i.NextResponse.json(S,{status:201})}catch(t){let e=t instanceof Error?t.message:String(t);return console.error("Error creating DocuSeal template:",e),i.NextResponse.json({message:"Internal Server Error",error:e},{status:500})}}let g=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/docuseal/templates/route",pathname:"/api/docuseal/templates",filename:"route",bundlePath:"app/api/docuseal/templates/route"},resolvedPagePath:"/home/maxwell/projects/projects/NextJs/Docu/src/app/api/docuseal/templates/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:f,workUnitAsyncStorage:h,serverHooks:E}=g;function S(){return(0,n.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:h})}},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[719,986,190],()=>s(90434));module.exports=r})();