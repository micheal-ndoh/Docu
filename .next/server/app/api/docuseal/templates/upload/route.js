(()=>{var e={};e.id=350,e.ids=[350],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12909:(e,t,r)=>{"use strict";r.d(t,{M:()=>i,j:()=>n});var s=r(85888),a=r(99425),o=r(45655);let n=(0,s.li)({database:(0,a._)(o.db,{provider:"postgresql"}),emailAndPassword:{enabled:!0,requireEmailVerification:!1},socialProviders:{google:{clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,redirectURI:"http://localhost:3000/api/auth/callback/google"}},session:{expiresIn:604800,updateAge:86400},secret:process.env.BETTER_AUTH_SECRET,baseURL:process.env.BETTER_AUTH_URL||process.env.NEXTAUTH_URL||"http://localhost:3000",rateLimit:{window:6e4,max:10}});async function i(e){try{console.log("[getServerSession] Attempting to get server session...");let t=e.headers,r=await n.api.getSession({headers:t});return console.log("[getServerSession] Session:",r?"found":"not found"),r}catch(e){return console.error("[getServerSession] Error obtaining server session from better-auth:",e),null}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},32591:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>f,routeModule:()=>d,serverHooks:()=>v,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{POST:()=>c});var a=r(96559),o=r(48088),n=r(37719),i=r(32190),l=r(12909),p=r(45655);let u=process.env.DOCUSEAL_URL||"https://api.docuseal.com";async function c(e){let t=await (0,l.M)(e),r=!!process.env.DOCUSEAL_API_KEY;if(!t&&!r)return i.NextResponse.json({message:"Unauthorized"},{status:401});try{let r=await e.formData(),s=r.get("file"),a=r.get("name")||r.get("template_name")||"Uploaded Template";if(!s)return i.NextResponse.json({message:"File is required"},{status:400});let o=await s.arrayBuffer(),n=Buffer.from(o).toString("base64"),l=s.type||"",c=s.name||"document",d="application/vnd.openxmlformats-officedocument.wordprocessingml.document"===l||c.toLowerCase().endsWith(".docx"),m="/templates/pdf";d&&(m="/templates/docx");let g=`${u}${m}`,v=await fetch(g,{method:"POST",headers:{"X-Auth-Token":process.env.DOCUSEAL_API_KEY??"","Content-Type":"application/json"},body:JSON.stringify({name:a,documents:[{name:c,file:n}]})});if(!v.ok){let e=await v.text(),t=e;try{t=JSON.parse(e)}catch{}return i.NextResponse.json(t,{status:v.status})}let f=await v.json();try{let e=t?.user?.id;e&&f.id&&(await p.db.template.create({data:{userId:e,docusealId:f.id,name:f.name||a}}),console.log(`[api/docuseal/templates/upload] Saved template ${f.id} to database for user ${e}`))}catch(e){console.error("[api/docuseal/templates/upload] Error saving template to database:",e)}return i.NextResponse.json(f,{status:201})}catch(t){let e=t instanceof Error?t.message:String(t);return console.error("Error creating DocuSeal template:",e),i.NextResponse.json({message:"Internal Server Error",error:e},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/docuseal/templates/upload/route",pathname:"/api/docuseal/templates/upload",filename:"route",bundlePath:"app/api/docuseal/templates/upload/route"},resolvedPagePath:"/home/maxwell/projects/projects/NextJs/Docu/src/app/api/docuseal/templates/upload/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:m,workUnitAsyncStorage:g,serverHooks:v}=d;function f(){return(0,n.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:g})}},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},45655:(e,t,r)=>{"use strict";r.d(t,{db:()=>a});let s=require("@prisma/client"),a=global.prisma||new s.PrismaClient({log:["query"]})},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96487:()=>{}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[719,986,190],()=>r(32591));module.exports=s})();