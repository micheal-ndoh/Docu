(()=>{var e={};e.id=49,e.ids=[49],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12909:(e,t,s)=>{"use strict";s.d(t,{M:()=>i,j:()=>a});var r=s(85888),o=s(99425),n=s(45655);let a=(0,r.li)({database:(0,o._)(n.db,{provider:"postgresql"}),emailAndPassword:{enabled:!0,requireEmailVerification:!1},socialProviders:{google:{clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,redirectURI:"http://localhost:3000/api/auth/callback/google"}},session:{expiresIn:604800,updateAge:86400},secret:process.env.BETTER_AUTH_SECRET,baseURL:process.env.BETTER_AUTH_URL||process.env.NEXTAUTH_URL||"http://localhost:3000",rateLimit:{window:6e4,max:10}});async function i(e){try{console.log("[getServerSession] Attempting to get server session...");let t=e.headers,s=await a.api.getSession({headers:t});return console.log("[getServerSession] Session:",s?"found":"not found"),s}catch(e){return console.error("[getServerSession] Error obtaining server session from better-auth:",e),null}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},36043:(e,t,s)=>{"use strict";s.r(t),s.d(t,{patchFetch:()=>h,routeModule:()=>d,serverHooks:()=>v,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>m});var r={};s.r(r),s.d(r,{GET:()=>p,PUT:()=>l});var o=s(96559),n=s(48088),a=s(37719),i=s(32190),u=s(12909);let c=process.env.DOCUSEAL_URL||"https://api.docuseal.com";async function p(e,{params:t}){if(!await (0,u.M)(e))return i.NextResponse.json({message:"Unauthorized"},{status:401});try{let{id:e}=t,s=await fetch(`${c}/submitters/${e}`,{headers:{"X-Auth-Token":process.env.DOCUSEAL_API_KEY??"","Content-Type":"application/json"}});if(!s.ok){let e=await s.json();return i.NextResponse.json(e,{status:s.status})}let r=await s.json();return i.NextResponse.json(r)}catch(e){return console.error(`Error fetching DocuSeal submitter ${t.id}:`,e),i.NextResponse.json({message:"Internal Server Error",error:e.message??String(e)},{status:500})}}async function l(e,{params:t}){if(!await (0,u.M)(e))return i.NextResponse.json({message:"Unauthorized"},{status:401});try{let{id:s}=t,r=await e.json(),o=await fetch(`${c}/submitters/${s}`,{method:"PUT",headers:{"X-Auth-Token":process.env.DOCUSEAL_API_KEY??"","Content-Type":"application/json"},body:JSON.stringify(r)});if(!o.ok){let e=await o.json();return i.NextResponse.json(e,{status:o.status})}let n=await o.json();return i.NextResponse.json(n)}catch(e){return console.error(`Error updating DocuSeal submitter ${t.id}:`,e),i.NextResponse.json({message:"Internal Server Error",error:e.message??String(e)},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/docuseal/submitters/[id]/route",pathname:"/api/docuseal/submitters/[id]",filename:"route",bundlePath:"app/api/docuseal/submitters/[id]/route"},resolvedPagePath:"/home/maxwell/projects/projects/NextJs/Docu/src/app/api/docuseal/submitters/[id]/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:g,workUnitAsyncStorage:m,serverHooks:v}=d;function h(){return(0,a.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:m})}},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},45655:(e,t,s)=>{"use strict";s.d(t,{db:()=>o});let r=require("@prisma/client"),o=global.prisma||new r.PrismaClient({log:["query"]})},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96487:()=>{}};var t=require("../../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[719,986,190],()=>s(36043));module.exports=r})();