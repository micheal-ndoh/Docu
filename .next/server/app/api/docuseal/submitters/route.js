(()=>{var e={};e.id=729,e.ids=[729],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12909:(e,t,r)=>{"use strict";r.d(t,{M:()=>i,j:()=>n});var s=r(85888),o=r(99425),a=r(45655);let n=(0,s.li)({database:(0,o._)(a.db,{provider:"postgresql"}),emailAndPassword:{enabled:!0,requireEmailVerification:!1},socialProviders:{google:{clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,redirectURI:"http://localhost:3000/api/auth/callback/google"}},session:{expiresIn:604800,updateAge:86400},secret:process.env.BETTER_AUTH_SECRET,baseURL:process.env.BETTER_AUTH_URL||process.env.NEXTAUTH_URL||"http://localhost:3000",rateLimit:{window:6e4,max:10}});async function i(e){try{console.log("[getServerSession] Attempting to get server session...");let t=e.headers,r=await n.api.getSession({headers:t});return console.log("[getServerSession] Session:",r?"found":"not found"),r}catch(e){return console.error("[getServerSession] Error obtaining server session from better-auth:",e),null}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},45655:(e,t,r)=>{"use strict";r.d(t,{db:()=>o});let s=require("@prisma/client"),o=global.prisma||new s.PrismaClient({log:["query"]})},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},81312:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>f,routeModule:()=>c,serverHooks:()=>m,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{GET:()=>u});var o=r(96559),a=r(48088),n=r(37719),i=r(32190),p=r(12909);let l=process.env.DOCUSEAL_URL||"https://api.docuseal.com";async function u(e){await (0,p.M)(e)||console.warn("[api/docuseal/submitters] no session - proceeding as anonymous");try{let{searchParams:t}=new URL(e.url),r=new URLSearchParams,s=t.get("limit")||"10";if(r.append("limit",s),t.has("after")){let e=t.get("after");e&&r.append("after",e)}if(t.has("before")){let e=t.get("before");e&&r.append("before",e)}if(t.has("submission_id")){let e=t.get("submission_id");e&&r.append("submission_id",e)}if(t.has("q")){let e=t.get("q");e&&r.append("q",e)}if(t.has("slug")){let e=t.get("slug");e&&r.append("slug",e)}if(t.has("completed_after")){let e=t.get("completed_after");e&&r.append("completed_after",e)}if(t.has("completed_before")){let e=t.get("completed_before");e&&r.append("completed_before",e)}if(t.has("external_id")){let e=t.get("external_id");e&&r.append("external_id",e)}let o=`${l}/submitters?${r.toString()}`,a=await fetch(o,{headers:{"X-Auth-Token":process.env.DOCUSEAL_API_KEY??"","Content-Type":"application/json"}});if(!a.ok){let e=await a.json();return i.NextResponse.json(e,{status:a.status})}let n=await a.json();if(Array.isArray(n))return i.NextResponse.json({data:n});return i.NextResponse.json(n)}catch(e){return console.error("Error fetching DocuSeal submitters:",e),i.NextResponse.json({message:"Internal Server Error",error:e.message??String(e)},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/docuseal/submitters/route",pathname:"/api/docuseal/submitters",filename:"route",bundlePath:"app/api/docuseal/submitters/route"},resolvedPagePath:"/home/maxwell/projects/projects/NextJs/Docu/src/app/api/docuseal/submitters/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:g,serverHooks:m}=c;function f(){return(0,n.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:g})}},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[719,986,190],()=>r(81312));module.exports=s})();