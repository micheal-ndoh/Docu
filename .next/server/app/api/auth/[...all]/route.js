(()=>{var e={};e.id=302,e.ids=[302],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12909:(e,r,t)=>{"use strict";t.d(r,{M:()=>i,j:()=>a});var s=t(85888),o=t(99425),n=t(45655);let a=(0,s.li)({database:(0,o._)(n.db,{provider:"postgresql"}),emailAndPassword:{enabled:!0,requireEmailVerification:!1},socialProviders:{google:{clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,redirectURI:"http://localhost:3000/api/auth/callback/google"}},session:{expiresIn:604800,updateAge:86400},secret:process.env.BETTER_AUTH_SECRET,baseURL:process.env.BETTER_AUTH_URL||process.env.NEXTAUTH_URL||"http://localhost:3000",rateLimit:{window:6e4,max:10}});async function i(e){try{console.log("[getServerSession] Attempting to get server session...");let r=e.headers,t=await a.api.getSession({headers:r});return console.log("[getServerSession] Session:",t?"found":"not found"),t}catch(e){return console.error("[getServerSession] Error obtaining server session from better-auth:",e),null}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},45655:(e,r,t)=>{"use strict";t.d(r,{db:()=>o});let s=require("@prisma/client"),o=global.prisma||new s.PrismaClient({log:["query"]})},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96100:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>v,routeModule:()=>p,serverHooks:()=>h,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>g});var s={};t.r(s),t.d(s,{GET:()=>u,POST:()=>c});var o=t(96559),n=t(48088),a=t(37719),i=t(12909);let l=!!process.env.LOG_AUTH_DEBUG;async function u(e){return l&&console.log("[api/auth] GET",{url:e.url}),i.j.handler(e)}async function c(e){if(l)try{let r=e.headers.get("content-type")||"";if(r.includes("application/json")){let r=e.clone(),t=await r.json().catch(()=>null);console.log("[api/auth] POST",{url:e.url,body:function e(r){if(!r||"object"!=typeof r)return r;let t=Array.isArray(r)?[]:{};for(let s of Object.keys(r)){let o=r[s];s.toLowerCase().includes("pass")||s.toLowerCase().includes("secret")||"token"===s?t[s]="string"==typeof o?"<redacted>":o:"object"==typeof o?t[s]=e(o):"string"==typeof o?t[s]=o.length>64?o.slice(0,32)+"â€¦":o:t[s]=o}return t}(t)})}else r.includes("application/x-www-form-urlencoded")||r.includes("multipart/form-data"),console.log("[api/auth] POST",{url:e.url,contentType:r})}catch(e){console.error("[api/auth] debug log failed",e)}return i.j.handler(e)}let p=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/auth/[...all]/route",pathname:"/api/auth/[...all]",filename:"route",bundlePath:"app/api/auth/[...all]/route"},resolvedPagePath:"/home/maxwell/projects/projects/NextJs/Docu/src/app/api/auth/[...all]/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:g,serverHooks:h}=p;function v(){return(0,a.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:g})}},96487:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[719,986],()=>t(96100));module.exports=s})();